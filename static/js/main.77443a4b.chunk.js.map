{"version":3,"sources":["components/User.js","components/Comment.js","components/CommentList.js","components/Post.js","components/PostList.js","api/getData.js","App.js","index.js"],"names":["User","_ref","user","react_default","a","createElement","className","name","email","address","city","street","suite","Comment","commentItem","body","CommentList","allComments","map","comment","components_Comment","key","id","Post","post","title","components_User","components_CommentList","PostList","allPosts","onChange","type","placeholder","autoComplete","components_Post","getData","Object","asyncToGenerator","regenerator_default","mark","_callee","url","responsePosts","posts","responseUsers","users","responseComments","comments","data","wrap","_context","prev","next","fetch","concat","sent","json","objectSpread","find","userId","filter","postId","abrupt","stop","_x","apply","this","arguments","currentList","getPostsByFilter","searchText","toConsumableArray","includes","App","state","isLoaded","isLoading","handleClick","_this","setState","document","getElementsByClassName","disabled","setTimeout","event","target","value","components_PostList","onClick","React","Component","ReactDOM","render","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.77443a4b.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ user }) => (\n  <div>\n    <ul className=\"user\">\n      <li>Author:</li>\n      <li>{user.name}</li>\n      <li>{user.email}</li>\n      <li>{user.address.city}</li>\n      <li>{user.address.street}</li>\n      <li>{user.address.suite}</li>\n    </ul>\n  </div>\n);\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    email: PropTypes.string,\n    address: PropTypes.shape({\n      city: PropTypes.string,\n      street: PropTypes.string,\n      suite: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Comment = ({ commentItem }) => (\n  <div className=\"comment\">\n    <p className=\"comment__body\">{commentItem.body}</p>\n    <ul className=\"user\">\n      <li>{commentItem.name}</li>\n      <li>{commentItem.email}</li>\n    </ul>\n  </div>\n);\n\nComment.propTypes = {\n  commentItem: PropTypes.shape({\n    body: PropTypes.string,\n    name: PropTypes.string,\n    email: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Comment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Comment from './Comment';\n\nconst CommentList = ({ allComments }) => (\n  allComments.map(comment => (\n    <Comment commentItem={comment} key={comment.id} />\n  ))\n);\n\nCommentList.propTypes = {\n  allComments: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default CommentList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport User from './User';\nimport CommentList from './CommentList';\n\nconst Post = ({ post }) => (\n  <div>\n    <div className=\"post\">\n      <div className=\"post__title\">{post.title}</div>\n      <p className=\"post__body\">\n        {post.body}\n      </p>\n      <User user={post.user} />\n    </div>\n    <CommentList allComments={post.comment} />\n  </div>\n);\n\nPost.propTypes = {\n  post: PropTypes.shape({\n    body: PropTypes.string,\n    title: PropTypes.string,\n    user: PropTypes.object,\n    comment: PropTypes.arrayOf(PropTypes.object),\n  }).isRequired,\n};\n\nexport default Post;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Post from './Post';\n\nconst PostList = ({ allPosts, onChange }) => (\n  <ul className=\"postlist\">\n    <form className=\"search\">\n\n      <input\n        type=\"search\"\n        placeholder=\"Input text for searching\"\n        className=\"search__input\"\n        autoComplete=\"off\"\n        onChange={onChange}\n      />\n\n    </form>\n\n    {allPosts.map(post => (\n      <li className=\"postlist__post\" key={post.id}>\n        <Post post={post} />\n      </li>\n    ))}\n  </ul>\n);\n\nPostList.propTypes = {\n  allPosts: PropTypes.arrayOf(PropTypes.shape({\n    userId: PropTypes.number,\n    id: PropTypes.number,\n    title: PropTypes.string,\n    body: PropTypes.string,\n  })).isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default PostList;\n","const getData = async(url) => {\n  const responsePosts = await fetch(`${url}/posts`);\n  const posts = await responsePosts.json();\n\n  const responseUsers = await fetch(`${url}/users`);\n  const users = await responseUsers.json();\n\n  const responseComments = await fetch(`${url}/comments`);\n  const comments = await responseComments.json();\n\n  const data = posts.map(post => ({\n    ...post,\n    user: users.find(user => (user.id === post.userId)),\n    comment: comments.filter(comment => comment.postId === post.id),\n  }));\n\n  return data;\n};\n\nexport default getData;\n","import React from 'react';\nimport './App.css';\n\nimport PostList from './components/PostList';\nimport getData from './api/getData';\n\nlet currentList = [];\nconst myUrl = 'https://jsonplaceholder.typicode.com';\n\nconst getPostsByFilter = (posts, searchText) => {\n  const filteringPosts = [...posts].filter(post => (\n    (post.title.includes(searchText) || post.body.includes(searchText))\n  ));\n  return filteringPosts;\n};\n\nclass App extends React.Component {\n  state = {\n    posts: [],\n    isLoaded: false,\n    isLoading: false,\n  };\n\n  async componentDidMount() {\n    currentList = await getData(myUrl);\n  }\n\n  handleClick = () => {\n    this.setState({\n      isLoading: true,\n    });\n\n    document.getElementsByClassName('loadData').disabled = true;\n\n    setTimeout(() => {\n      this.setState({\n        posts: currentList,\n        isLoaded: true,\n        isLoading: false,\n      });\n    }, 0);\n  };\n\n  onChange = (event) => {\n    this.setState({\n      posts: getPostsByFilter(currentList, event.target.value),\n    });\n  };\n\n  render() {\n    return (\n      <main className=\"main\">\n\n        { this.state.isLoaded ? (\n\n          <PostList\n            allPosts={this.state.posts}\n            onChange={this.onChange}\n          />\n\n        ) : (\n          <button\n            type=\"button\"\n            className=\"loadData\"\n            onClick={this.handleClick}\n          >\n            {this.state.isLoading ? 'Loading...' : 'Load' }\n          </button>\n        )}\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}