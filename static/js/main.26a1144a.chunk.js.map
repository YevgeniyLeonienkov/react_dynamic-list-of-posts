{"version":3,"sources":["components/User.js","components/Comment.js","components/CommentList.js","components/Post.js","components/PostList.js","api/getData.js","utils.js","App.js","index.js"],"names":["User","_ref","user","react_default","a","createElement","className","name","email","address","city","street","suite","Comment","commentItem","body","CommentList","allComments","map","comment","components_Comment","key","id","Post","post","title","components_User","components_CommentList","PostList","allPosts","handleSearch","Fragment","type","placeholder","autoComplete","onChange","components_Post","myUrl","getPosts","Object","asyncToGenerator","regenerator_default","mark","_callee","responsePosts","posts","wrap","_context","prev","next","fetch","concat","sent","json","abrupt","stop","apply","this","arguments","getUsers","_ref2","_callee2","responseUsers","users","_context2","getComments","_ref3","_callee3","responseComments","comments","_context3","getPostsByFilter","searchText","toConsumableArray","filter","includes","App","state","shownPosts","isLoaded","isLoading","handleLoadData","preparedPosts","_this","setState","Promise","all","slicedToArray","objectSpread","find","userId","postId","event","value","target","prevState","components_PostList","onClick","disabled","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.26a1144a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ user }) => (\n  <div>\n    <ul className=\"user\">\n      <li>Author:</li>\n      <li>{user.name}</li>\n      <li>{user.email}</li>\n      <li>{user.address.city}</li>\n      <li>{user.address.street}</li>\n      <li>{user.address.suite}</li>\n    </ul>\n  </div>\n);\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    email: PropTypes.string,\n    address: PropTypes.shape({\n      city: PropTypes.string,\n      street: PropTypes.string,\n      suite: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Comment = ({ commentItem }) => (\n  <div className=\"comment\">\n    <p className=\"comment__body\">{commentItem.body}</p>\n    <ul className=\"user\">\n      <li>{commentItem.name}</li>\n      <li>{commentItem.email}</li>\n    </ul>\n  </div>\n);\n\nComment.propTypes = {\n  commentItem: PropTypes.shape({\n    body: PropTypes.string,\n    name: PropTypes.string,\n    email: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Comment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Comment from './Comment';\n\nconst CommentList = ({ allComments }) => (\n  allComments.map(comment => (\n    <Comment commentItem={comment} key={comment.id} />\n  ))\n);\n\nCommentList.propTypes = {\n  allComments: PropTypes.arrayOf(PropTypes.shape({\n    body: PropTypes.string,\n    name: PropTypes.string,\n    email: PropTypes.string,\n  })).isRequired,\n};\n\nexport default CommentList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport User from './User';\nimport CommentList from './CommentList';\n\nconst Post = ({ post }) => (\n  <div>\n    <div className=\"post\">\n      <div className=\"post__title\">{post.title}</div>\n      <p className=\"post__body\">\n        {post.body}\n      </p>\n      <User user={post.user} />\n    </div>\n    <CommentList allComments={post.comment} />\n  </div>\n);\n\nPost.propTypes = {\n  post: PropTypes.shape({\n    body: PropTypes.string,\n    title: PropTypes.string,\n    user: PropTypes.object,\n    comment: PropTypes.arrayOf(PropTypes.object),\n  }).isRequired,\n};\n\nexport default Post;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Post from './Post';\n\nconst PostList = ({ allPosts, handleSearch }) => (\n  <>\n    <div className=\"search\">\n      <input\n        type=\"search\"\n        placeholder=\"Input name for searching\"\n        className=\"search__input\"\n        autoComplete=\"off\"\n        onChange={handleSearch}\n      />\n    </div>\n\n    <ul className=\"postlist\">\n      {allPosts.map(post => (\n        <li className=\"postlist__post\" key={post.id}>\n          <Post post={post} />\n        </li>\n      ))}\n    </ul>\n\n  </>\n);\n\nPostList.propTypes = {\n  allPosts: PropTypes.arrayOf(PropTypes.shape({\n    userId: PropTypes.number,\n    id: PropTypes.number,\n    title: PropTypes.string,\n    body: PropTypes.string,\n  })).isRequired,\n  handleSearch: PropTypes.func.isRequired,\n};\n\nexport default PostList;\n","const myUrl = 'https://jsonplaceholder.typicode.com';\n\nexport const getPosts = async() => {\n  const responsePosts = await fetch(`${myUrl}/posts`);\n  const posts = await responsePosts.json();\n\n  return posts;\n};\n\nexport const getUsers = async() => {\n  const responseUsers = await fetch(`${myUrl}/users`);\n  const users = await responseUsers.json();\n\n  return users;\n};\n\nexport const getComments = async() => {\n  const responseComments = await fetch(`${myUrl}/comments`);\n  const comments = await responseComments.json();\n\n  return comments;\n};\n","const getPostsByFilter = (posts, searchText) => {\n  const filteringPosts = [...posts].filter(post => (\n    (post.title.includes(searchText) || post.body.includes(searchText))\n  ));\n  return filteringPosts;\n};\n\nexport default getPostsByFilter;\n","import React from 'react';\nimport './App.css';\n\nimport PostList from './components/PostList';\nimport { getPosts, getUsers, getComments } from './api/getData';\nimport getPostsByFilter from './utils';\n\nclass App extends React.Component {\n  state = {\n    posts: [],\n    shownPosts: [],\n    isLoaded: false,\n    isLoading: false,\n  };\n\n  handleLoadData = async() => {\n    this.setState({\n      isLoading: true,\n    });\n\n    const [posts, users, comments] = await Promise.all([\n      getPosts(),\n      getUsers(),\n      getComments(),\n    ]);\n\n    const preparedPosts = posts.map(post => ({\n      ...post,\n      user: users.find(user => user.id === post.userId),\n      comment: comments.filter(comment => comment.postId === post.id),\n    }));\n\n    this.setState({\n      posts: preparedPosts,\n      shownPosts: preparedPosts,\n      isLoaded: true,\n      isLoading: false,\n    });\n  };\n\n  handleSearch = (event) => {\n    const { value } = event.target;\n\n    this.setState(prevState => ({\n      shownPosts: getPostsByFilter(prevState.posts, value),\n    }));\n  };\n\n  render() {\n    return (\n      <main className=\"main\">\n\n        { this.state.isLoaded ? (\n\n          <PostList\n            allPosts={this.state.shownPosts}\n            handleSearch={this.handleSearch}\n          />\n\n        ) : (\n          <button\n            type=\"button\"\n            className=\"loadData\"\n            onClick={this.handleLoadData}\n            disabled={this.state.isLoading}\n          >\n            {this.state.isLoading ? 'Loading...' : 'Load' }\n          </button>\n        )}\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}